{"version":3,"sources":["getUserTodo.js","store.js","TodoItem.js","TodoList.js","App.js","index.js"],"names":["prepareData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","value","url","wrap","_context","prev","next","concat","abrupt","fetch","then","response","json","stop","_x","apply","this","arguments","getTodosWithUsers","_ref2","_callee2","todosData","usersData","_context2","sent","map","todo","_objectSpread","user","find","id","userId","store","createStore","state","action","type","store_objectSpread","isLoading","hasError","todos","sortedTodos","order","toConsumableArray","sort","b","name","localeCompare","title","filter","completed","applyMiddleware","thunk","connect","dispatch","deleteTodo","react_default","createElement","className","defaultChecked","onClick","sortedbyName","sortedbyId","sortedByTitle","sortedByCompleted","src_TodoItem","key","App","loadTodos","_this","props","_this$props","Fragment","length","src_TodoList","React","Component","handleSuccess","catch","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.829ba4ad.chunk.js","sourcesContent":["const prepareData = async(value) => {\n  const url = `https://jsonplaceholder.typicode.com/${value}`;\n\n  return fetch(url)\n    .then(response => response.json());\n};\n\nconst getTodosWithUsers = async() => {\n  const todosData = await prepareData('todos');\n  const usersData = await prepareData('users');\n\n  return todosData.map(todo => ({\n    ...todo,\n    user: usersData.find(user => user.id === todo.userId),\n  }));\n};\n\nexport default getTodosWithUsers;\n","import thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport getTodosWithUsers from './getUserTodo';\n\nconst START_LOADING = 'START_LOADING';\nconst HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nconst HANDLE_ERROR = 'HANDLE_ERROR';\nconst DELETE_TODO = 'DELETE_TODO';\nconst SORTED_BY_NAME = 'SORTED_BY_NAME';\nconst SORTED_BY_ID = 'SORTED_BY_ID';\nconst SORTED_BY_TITLE = 'SORTED_BY_TITLE';\nconst SORTED_BY_COMPLETED = 'SORTED_BY_COMPLETED';\n\nexport const sortedByCompleted = () => ({ type: SORTED_BY_COMPLETED });\nexport const sortedByTitle = () => ({ type: SORTED_BY_TITLE });\nexport const startLoading = () => ({ type: START_LOADING });\nexport const handleError = () => ({ type: HANDLE_ERROR });\nexport const handleSuccess = todos => ({\n  type: HANDLE_SUCCESS,\n  todos,\n});\nexport const sortedbyId = () => ({ type: SORTED_BY_ID });\nexport const sortedbyName = value => ({ type: SORTED_BY_NAME });\nexport const deleteTodo = value => ({ type: DELETE_TODO, value });\nexport const loadTodos = () => (dispatch) => {\n  dispatch(startLoading());\n\n  return getTodosWithUsers()\n    .then(todos => dispatch(handleSuccess(todos)))\n    .catch(() => dispatch(handleError()));\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        todos: action.todos,\n        sortedTodos: action.todos,\n      };\n    case HANDLE_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n      };\n    case SORTED_BY_NAME:\n      return {\n        ...state,\n        order: state.order === 1 ? -1 : 1,\n        todos: [...state.sortedTodos].sort((a, b) => (\n          state.order * (a.user.name.localeCompare(b.user.name))\n        )),\n      };\n    case SORTED_BY_TITLE:\n      return {\n        ...state,\n        order: state.order === 1 ? -1 : 1,\n        todos: [...state.sortedTodos].sort((a, b) => (\n          state.order * (a.title.localeCompare(b.title))\n        )),\n      };\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.value),\n      };\n    case SORTED_BY_ID:\n      return {\n        ...state,\n        order: state.order === 1 ? -1 : 1,\n        todos: [...state.sortedTodos].sort((a, b) => (\n          a.id - b.id\n        )),\n      };\n    case SORTED_BY_COMPLETED:\n      return {\n        ...state,\n        order: state.order === 1 ? -1 : 1,\n        todos: [...state.sortedTodos].sort((a, b) => (\n          a.completed - b.completed\n        )),\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  todos: [],\n  sortedTodos: [],\n  order: 1,\n  isLoading: false,\n  hasError: false,\n};\n\nconst store = createStore(\n  reducer,\n  initialState,\n  applyMiddleware(thunk),\n);\n\nexport default store;\n","/* eslint-disable react/no-this-in-sfc */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable semi */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { deleteTodo } from './store';\n\nconst TodoItem = ({ todo, deleteTodo }) => (\n  <tr className=\"App__table_container\">\n    <td>{todo.id}</td>\n    <td className=\"bold\">{todo.user.name}</td>\n    <td className=\"align-left\">{todo.title}</td>\n    <td>\n      <input type=\"checkbox\" defaultChecked={todo.completed} />\n      {todo.completed}\n    </td>\n    <td>\n      <button\n        type=\"button\"\n        onClick={() => { deleteTodo(todo.id) }}\n      >\n          Delete\n      </button>\n\n    </td>\n  </tr>\n)\n\nTodoItem.propTypes = {\n  deleteTodo: PropTypes.func,\n  todo: PropTypes.shape({\n    completed: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number,\n    user: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  deleteTodo: value => dispatch(deleteTodo(value)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(TodoItem);\n","/* eslint-disable no-shadow */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  sortedbyName, sortedbyId, sortedByTitle, sortedByCompleted,\n} from './store';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({\n  // eslint-disable-next-line react/prop-types\n  todos, sortedbyName, sortedbyId, sortedByTitle, sortedByCompleted,\n}) => (\n  <table className=\"App\">\n    <thead>\n      <tr>\n        <th><button type=\"button\" onClick={sortedbyId}>id</button></th>\n        <th><button type=\"button\" onClick={sortedbyName}>name</button></th>\n        <th><button type=\"button\" onClick={sortedByTitle}>title</button></th>\n        <th>\n          <button type=\"button\" onClick={sortedByCompleted}>Completed</button>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem todo={todo} key={todo.id} />\n      ))}\n    </tbody>\n  </table>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.shape().isRequired,\n  sortedbyName: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  sortedbyName: () => dispatch(sortedbyName()),\n  sortedbyId: () => dispatch(sortedbyId()),\n  sortedByTitle: () => dispatch(sortedByTitle()),\n  sortedByCompleted: () => dispatch(sortedByCompleted()),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(TodoList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TodoList from './TodoList';\nimport { loadTodos } from './store';\nimport './App.css';\n\nclass App extends React.Component {\n  loadTodos = () => {\n    this.props.loadTodos();\n  }\n\n  render() {\n    const { isLoading, todos, hasError } = this.props;\n\n    if (isLoading) {\n      return <p>Loadig...</p>;\n    }\n\n    if (hasError) {\n      return (\n        <>\n          <p>Erro occurrer!!</p>\n          <button type=\"button\" onClick={this.loadTodos}>try Again</button>\n        </>\n      );\n    }\n\n    if (todos.length === 0) {\n      return (\n        <>\n          <p>No todos yet</p>\n          <button type=\"button\" onClick={this.loadTodos}>Load</button>\n        </>\n      );\n    }\n    return (\n      <>\n        <TodoList todos={todos} key={todos.id} />\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  todos: state.todos,\n  isLoading: state.isLoading,\n  hasError: state.hasError,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadTodos: () => dispatch(loadTodos()),\n});\n\nApp.propTypes = {\n  loadTodos: PropTypes.shape().isRequired,\n  todos: PropTypes.shape().isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  hasError: PropTypes.string.isRequired,\n\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <Provider\n    store={store}\n  >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}